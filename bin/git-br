#!/bin/bash
NAME="`git config --global user.name | awk '{print $1}'`"

##################
# preset options #
##################
porcelainify=0
shortify=0

######################
# get default action #
######################
action="$1"
shift

###############
# get options #
###############
while true ; do
  case $1 in
    --porcelain)
      porcelainify=1
      shift
    ;;
    --short)
     shortify=1
     shift
    ;;
    *) break;;
  esac
done

#####################################
# define format with custom options #
#####################################
if [ $porcelainify -eq 1 ] ; then
  REF='%(refname:short)'
  AUTH='<%(authorname)>'
  DATE='(%(committerdate:short))'
else
  REF='%(color:yellow)%(refname:short)%(color:reset)'
  AUTH='%(color:bold blue)<%(authorname)>%(color:reset)'
  DATE='%(color:green)(%(committerdate:short))%(color:reset)'
fi
if [ $shortify -eq 1 ] ; then
  DATE=''
fi
FORMAT="$REF $AUTH $DATE"

#####################################
# define default function by action #
#####################################
case "$action" in
  -wp|--whop)
    f() {
      $0 --who --porcelain $1 $2
    }
  ;;

  -w|--who)
    f() {
      local w="${1}"
      local b=${2:-remotes/origin/develop}
      local path='refs/remotes/origin/developments'
      git for-each-ref --no-merge $b --format="$FORMAT" "$path" \
        | sort | grep "$w";
    }
  ;;

  #m9 shortified (without origin / without name)
  --m8)
    f() {
      $0 --who --porcelain --short "$NAME" \
        | sed 's_^origin/\([^[:blank:]]*\).*$_\1_'
    }
  ;;

  #mine without color
  --m9)
    f() {
      $0 --who --porcelain "$NAME" $1
    }
  ;;

  --mine)
    f() {
      $0 --who "$NAME" "$1"
    }
  ;;

  --switch)
    f() {
      local d=${1-1}
      git checkout `git br --old $d`;
    }
  ;;

  --history|--switch-history)
    f() {
      [ -x "$BASH_LIB/bin/odd-color.sh" ] \
        && output="$BASH_LIB/bin/odd-color.sh" \
        || output="cat"
      git reflog \
        | awk '$3 ~ /checkout/ {print $1": checkout from "$6}' \
        | head -n40 \
        | cat --number \
        | $output
      }
  ;;

  -o|--old)
    f() {
      local d=${1:-1}
      git reflog | awk '$3 ~ /checkout/ {print $6}' \
        | head -n$d \
        | tail -n1
    }
  ;;

  -p|--pwd)
    f() {
      git branch \
        | grep -E '^\\*' \
        | awk '{print $NF}'
    }
  ;;


  -a)
    f() {
      local path='refs/remotes/origin/'
      echo "# remotes/origin/* refs"
      git for-each-ref --format="$FORMAT" "$path" | sort;
    }
  ;;

  *)
    f() {
      git branch $action $@
    }
  ;;
esac

##############
# run script #
##############
f $@
